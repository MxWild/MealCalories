<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

<!--    <context:component-scan base-package="com.gmail.**.repository.jdbc"/>-->
    <context:component-scan base-package="com.gmail.**.repository.jpa"/>

    <context:property-placeholder location="classpath:db/database-dev.properties" system-properties-mode="OVERRIDE"/>
<!--    <context:property-placeholder location="classpath:db/database-prod.properties" system-properties-mode="OVERRIDE"/>-->
<!--    <context:property-placeholder location="classpath:db/database-hsqldb.properties" system-properties-mode="OVERRIDE"/>-->

    <bean class="org.springframework.beans.factory.config.MethodInvokingBean">
        <property name="staticMethod" value="org.slf4j.bridge.SLF4JBridgeHandler.install"/>
    </bean>

    <jdbc:initialize-database data-source="dataSource" enabled="${db.init}">
        <jdbc:script location="${jdbc.initLocation}"/>
        <jdbc:script encoding="UTF-8" location="classpath:db/populateDB.sql"/>
    </jdbc:initialize-database>

    <!-- no pooling -->
    <!-- will be replace by Hikari -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driverClassName}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.gmail.**.model"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="${jpa.showSql}"/>
            </bean>
        </property>
        <property name="jpaPropertyMap">
            <map>
                <entry key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}" value="${hibernate.format_sql}"/>
                <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SQL_COMMENTS}" value="${hibernate.use_sql_comments}"/>
            </map>
        </property>
    </bean>

    <!--<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.gmail.**.model"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.format_sql"></prop>
                <prop key="use_sql_comments"></prop>
                <prop key="hibernate.dialect"></prop>
            </props>
        </property>
    </bean>-->

    <tx:annotation-driven/>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

<!--    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="jdbcTemplate"/>
    </bean>-->

</beans>